import{_ as i,r as o,o as c,c as d,a as t,b as n,d as s,w as p,e}from"./app-1725cc43.js";const u="/assets/openapi-aggregator-1d298120.png",r="/assets/openapi-group-4186624d.png",g="/assets/openapi-aggregator-group-35d2e290.png",k="/assets/openapi-authorize-80d83fa1.png",y="/assets/openapi-apikey-adeeba35.png",f="/assets/openapi-apikey2-44478131.png",h="/assets/openapi-apikey-header-593af60a.png",m={},v=e('<h1 id="openapi-文档-swagger" tabindex="-1"><a class="header-anchor" href="#openapi-文档-swagger" aria-hidden="true">#</a> OpenAPI 文档 (Swagger)</h1><p><strong>当前文档对应 ballcat v0.7.0 以上版本，springdoc-openapi 版本为 1.6.7</strong></p><h2 id="什么是-openapi" tabindex="-1"><a class="header-anchor" href="#什么是-openapi" aria-hidden="true">#</a> 什么是 OpenAPI</h2><p>首先 OpenAPI 其实就是 Swagger, Swagger 规范于 2015 年 更名为 OpenAPI 规范，简称 OAS.</p><p>OpenAPI 规范的变更时间:</p><table><thead><tr><th>版本</th><th>日期</th><th>笔记</th></tr></thead><tbody><tr><td>3.0.3</td><td>2020-02-20</td><td>OpenAPI 规范 3.0.3 补丁发布</td></tr><tr><td>3.0.2</td><td>2018-10-08</td><td>OpenAPI 规范 3.0.2 补丁发布</td></tr><tr><td>3.0.1</td><td>2017-12-06</td><td>OpenAPI 规范 3.0.1 补丁发布</td></tr><tr><td><strong>3.0.0</strong></td><td><strong>2017-07-26</strong></td><td><strong>OpenAPI 规范 3.0.0 的发布</strong></td></tr><tr><td>3.0.0-rc2</td><td>2017-06-16</td><td>3.0 规范的 rc2</td></tr><tr><td>3.0.0-rc1</td><td>2017-04-27</td><td>3.0 规范的 rc1</td></tr><tr><td>3.0.0-rc0</td><td>2017-02-28</td><td>3.0 规范的实施者草案</td></tr><tr><td><strong>2.0</strong></td><td><strong>2015-12-31</strong></td><td><strong>将 Swagger 2.0 捐赠给 OpenAPI Initiative</strong></td></tr><tr><td>2.0</td><td>2014-09-08</td><td>Swagger 2.0 发布</td></tr><tr><td>1.2</td><td>2014-03-14</td><td>正式文件的初始发布。</td></tr><tr><td>1.1</td><td>2012-08-22</td><td>Swagger 1.1 发布</td></tr><tr><td>1.0</td><td>2011-08-10</td><td>Swagger 规范的首次发布</td></tr></tbody></table><p>可以看到，3.0.0 发布距今 2021 年，已有 4 年之久了，是时候抛弃 Swagger2 切换到 OpenApi3 了。</p>',7),x=e(`<h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式" aria-hidden="true">#</a> 使用方式</h2><blockquote><p>由于 springfox 社区已经超过一年半的时间没有进行更新维护了，所以推荐大家使用 springdoc-openapi 来构建 swagger 文档。</p></blockquote><p>springdoc 官方文档地址：https://springdoc.org，这里摘录并翻译部分，更多使用可参看原文档。</p><h3 id="依赖引入" tabindex="-1"><a class="header-anchor" href="#依赖引入" aria-hidden="true">#</a> 依赖引入</h3><p>引入 ui 依赖后，在 springboot 环境下，直接启动即可，无需任何额外配置</p><ul><li><p>spring-webmvc 环境下引入</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springdoc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springdoc-openapi-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${lastedVersion}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> 
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>spring-webflux 环境下引入</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springdoc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springdoc-openapi-webflux-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${lastedVersion}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> 
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>这将自动将 swagger-ui 部署到 spring-boot 应用程序：</p>`,7),b={href:"https://github.com/swagger-api/swagger-ui.git",target:"_blank",rel:"noopener noreferrer"},_=t("li",null,[n("启动项目后，访问 "),t("code",null,"http://server:port/context-path/swagger-ui.html"),n(" 即可进入 Swagger UI 页面，OpenAPI 描述将在以下 json 格式的 url 中 提供："),t("code",null,"http://server:port/context-path/v3/api-docs"),t("ul",null,[t("li",null,"server：域名 或 IP"),t("li",null,"port：服务器端口"),t("li",null,"context-path：应用程序的上下文路径，springboot 默认为空")])],-1),w=t("li",null,"文档也可以 yaml 格式提供，位于以下路径：/v3/api-docs.yaml",-1),S=e(`<h3 id="替换-ui" tabindex="-1"><a class="header-anchor" href="#替换-ui" aria-hidden="true">#</a> 替换 UI</h3><p>如果嫌弃官方提供的 swagger-ui 不美观，或者使用不顺手，可以选择关闭 ui，还可以剔除掉 ui 相关的 webjar 的引入。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">springdoc</span><span class="token punctuation">:</span>
  <span class="token key atrule">swagger-ui</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>OpenAPI 文档信息，默认可在此 url 中获取： <code>http://server:port/context-path/v3/api-docs</code>。<br> 可以利用其他支持 OpenAPI 协议的工具，通过此地址，进行 API 展示，如 <strong>Apifox</strong>。<br> （ Postman 的 api 测试也可以利用此地址进行导入生成 ）</p><p><strong>Knife4j (原 swagger-bootstrap-ui)</strong> 3.x 版本提供了对于 OpenAPI 协议的部分支持。</p><div class="custom-container warning"><p class="custom-container-title">警告</p><p>Knife4j 很多地方没有按照协议规范实现，所以使用起来会有很多问题，另外项目也很久没有维护了，不推荐使用。</p></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token comment">&lt;!-- swagger 增强版 ui --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.xiaoymin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>knife4j-springdoc-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意，这里一定要引入 v3.0.3 或以上版本，目前最高 v3.0.3</p></blockquote><p>由于 knife4j 对于规范支持的不全面，无法直接使用单文档源数据，所以必须进行分组或者 urls 的指定。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># urls</span>
<span class="token key atrule">springdoc</span><span class="token punctuation">:</span>
  <span class="token key atrule">swagger-ui</span><span class="token punctuation">:</span>
    <span class="token key atrule">urls</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;sample&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">&#39;/v3/api-docs&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment">#分组</span>
<span class="token key atrule">springdoc</span><span class="token punctuation">:</span>
  <span class="token key atrule">group-configs</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">&#39;sample&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">packages-to-scan</span><span class="token punctuation">:</span> <span class="token string">&#39;com.example&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多分组或者 urls 配置，请看文档聚合和分组一节。</p><p><strong>Knife4j</strong> 的 UI 访问地址有所不同，页面映射在 <code>doc.html</code> 路径下，启动项目后，访问 <code>http://server:port/context-path/doc.html</code></p><p>即可进入 Knife4j 的 Swagger UI 页面。</p><h3 id="javadoc-支持" tabindex="-1"><a class="header-anchor" href="#javadoc-支持" aria-hidden="true">#</a> Javadoc 支持</h3><p>springdoc-openapi 目前支持将 javadoc 转换为 swagger 信息来源的能力，而无需用户在项目中添加对应的 Swagger 的注解。</p><p>对于想要启用 javadoc 支持的项目，在之前的依赖之外，还需要额外添加以下依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springdoc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springdoc-openapi-javadoc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${lastedVersion}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> 
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此依赖项改进了对 javadoc 标记和注释的支持：</p><ul><li>方法的 javadoc 注释：解析为 <code>@Operation</code> 描述</li><li><code>@return </code>: 解析为 <code>@Operation</code> 响应描述</li><li>属性的 javadoc 注释：被解析为此字段的 <code>@Schema</code> 描述。</li></ul>`,21),I={href:"https://github.com/dnault/therapi-runtime-javadoc",target:"_blank",rel:"noopener noreferrer"},A=e(`<p>在 <code>maven-compiler-plugin</code> 添加对应的注解处理器</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>annotationProcessorPaths</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.therapi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>therapi-runtime-javadoc-scribe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.12.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>annotationProcessorPaths</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>如果同时存在 swagger-annotation 描述和 javadoc 注释。将使用 swagger-annotation 描述的值。</p></blockquote><h3 id="定制-openapi-基本信息" tabindex="-1"><a class="header-anchor" href="#定制-openapi-基本信息" aria-hidden="true">#</a> 定制 OpenApi 基本信息</h3><p>springdoc 默认只支持使用使用注解，或者注册 SpringBean 的形式构建 openApi，由于之前习惯了在 yaml 中定义这些信息，所以 ballcat 对此进行了部分封装，同时支持 cors 跨域配置，方便做文档聚合。</p><p>依赖引入：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.hccake<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ballcat-extend-openapi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${lastedVersion}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置示例：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">ballcat</span><span class="token punctuation">:</span>
  <span class="token key atrule">openapi</span><span class="token punctuation">:</span>
    <span class="token key atrule">info</span><span class="token punctuation">:</span>
      <span class="token key atrule">title</span><span class="token punctuation">:</span> BallCat<span class="token punctuation">-</span>Admin Docs 
      <span class="token key atrule">description</span><span class="token punctuation">:</span> BallCat 后台管理服务Api文档
      <span class="token key atrule">version</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>project.version<span class="token punctuation">}</span>
      <span class="token key atrule">terms-of-service</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//www.ballcat.cn/
      <span class="token key atrule">license</span><span class="token punctuation">:</span>
        <span class="token key atrule">name</span><span class="token punctuation">:</span> Powered By BallCat
        <span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//www.ballcat.cn/
      <span class="token key atrule">contact</span><span class="token punctuation">:</span>
        <span class="token key atrule">name</span><span class="token punctuation">:</span> Hccake
        <span class="token key atrule">email</span><span class="token punctuation">:</span> chengbohua@foxmail.com
        <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/Hccake
    <span class="token key atrule">components</span><span class="token punctuation">:</span>
      <span class="token comment"># 鉴权方式配置</span>
      <span class="token key atrule">security-schemes</span><span class="token punctuation">:</span>
        <span class="token key atrule">apiKey</span><span class="token punctuation">:</span>
          <span class="token key atrule">type</span><span class="token punctuation">:</span> APIKEY
          <span class="token key atrule">in</span><span class="token punctuation">:</span> HEADER
          <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;api-key&#39;</span>
        <span class="token key atrule">oauth2</span><span class="token punctuation">:</span>
          <span class="token key atrule">type</span><span class="token punctuation">:</span> OAUTH2
          <span class="token key atrule">flows</span><span class="token punctuation">:</span>
            <span class="token key atrule">password</span><span class="token punctuation">:</span>
              <span class="token key atrule">token-url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//ballcat<span class="token punctuation">-</span>admin<span class="token punctuation">:</span>8089/oauth/token
    <span class="token comment"># 全局默认的鉴权方式支持</span>
    <span class="token key atrule">security</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">oauth2</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token punctuation">-</span> <span class="token key atrule">apiKey</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性配置" tabindex="-1"><a class="header-anchor" href="#属性配置" aria-hidden="true">#</a> 属性配置</h2><h3 id="ballcat-extend-openapi-属性" tabindex="-1"><a class="header-anchor" href="#ballcat-extend-openapi-属性" aria-hidden="true">#</a> ballcat-extend-openapi 属性</h3>`,11),O=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"参数名称"),t("th",{style:{"text-align":"left"}},"默认值"),t("th",{style:{"text-align":"left"}},"描述")])],-1),B=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.enabled"),t("td",{style:{"text-align":"left"}},[t("code",null,"true")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(", 用于开启或关闭 OpenApi 文档")])],-1),P=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.info.title"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". OpenApi 标题")])],-1),j=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.info.description"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". OpenApi 描述")])],-1),L=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.info.terms-of-service"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". OpenApi 服务条款URL")])],-1),C=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.info.version"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". OpenApi 文档版本")])],-1),R=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.info.contact.name"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". OpenApi 联系人名称")])],-1),q=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.info.contact.url"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". OpenApi 联系 URL 地址")])],-1),U=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.info.contact.email"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". OpenApi 联系邮箱")])],-1),T=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.info.license.name"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 许可证名称")])],-1),E=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.info.license.url"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 许可证 url")])],-1),H=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.external-docs.description"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 扩展文档描述")])],-1),K=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.external-docs.url"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 扩展文档链接")])],-1),F=t("td",{style:{"text-align":"left"}},"ballcat.openapi.components.security-schemes.*",-1),N=t("td",{style:{"text-align":"left"}},null,-1),D={style:{"text-align":"left"}},M=t("code",null,"Map",-1),z={href:"https://github.com/OAI/OpenAPI-Specification/blob/3.0.1/versions/3.0.1.md#securitySchemeObject",target:"_blank",rel:"noopener noreferrer"},V=t("td",{style:{"text-align":"left"}},"ballcat.openapi.global-security-requirements.*",-1),$=t("td",{style:{"text-align":"left"}},null,-1),G={style:{"text-align":"left"}},J=t("code",null,"Map",-1),W=t("code",null,"oauth2",-1),X=t("code",null,"openIdConnect",-1),Y={href:"https://github.com/OAI/OpenAPI-Specification/blob/3.0.1/versions/3.0.1.md#security-requirement-object",target:"_blank",rel:"noopener noreferrer"},Q=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.cors-config.enabled"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(", 用于开启或关闭 CORS 跨域配置，默认不开启")])],-1),Z=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.cors-config.url-pattern"),t("td",{style:{"text-align":"left"}},[t("code",null,"/**")]),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 跨域对应的 url 匹配规则，为了方便调试，默认为全局")])],-1),tt=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.cors-config.allowed-origins"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"List of Strings"),n(".允许跨域的源")])],-1),nt=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.cors-config.allowed-origin-patterns"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"List of Strings"),n(".允许跨域来源的匹配规则")])],-1),st=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.cors-config.allowed-methods"),t("td",{style:{"text-align":"left"}},[t("code",null,'["*"]')]),t("td",{style:{"text-align":"left"}},[t("code",null,"List of Strings"),n(".允许跨域的方法列表")])],-1),at=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.cors-config.allowed-headers"),t("td",{style:{"text-align":"left"}},[t("code",null,'["*"]')]),t("td",{style:{"text-align":"left"}},[t("code",null,"List of Strings"),n(".允许跨域的头信息")])],-1),et=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.cors-config.exposed-headers"),t("td",{style:{"text-align":"left"}},[t("code",null,'["traceId"]')]),t("td",{style:{"text-align":"left"}},[t("code",null,"List of Strings"),n(". 额外允许跨域请求方获取的 response header 信息")])],-1),lt=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.cors-config.allow-credentials"),t("td",{style:{"text-align":"left"}},[t("code",null,"true")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(", 是否允许跨域发送 Cookie")])],-1),ot=t("tr",null,[t("td",{style:{"text-align":"left"}},"ballcat.openapi.cors-config.max-age"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"Number"),n(". CORS 配置缓存时间")])],-1),pt=e('<h3 id="springdoc-openapi-属性" tabindex="-1"><a class="header-anchor" href="#springdoc-openapi-属性" aria-hidden="true">#</a> springdoc-openapi 属性</h3><table><thead><tr><th style="text-align:left;">参数名称</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">springdoc.api-docs.path</td><td style="text-align:left;"><code>/v3/api-docs</code></td><td style="text-align:left;"><code>String</code>, 用于自定义 Json 格式的 OpenAPI 文档路径。</td></tr><tr><td style="text-align:left;">springdoc.api-docs.enabled</td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;"><code>Boolean</code>. 禁用 springdoc-openapi 端点（默认为 /v3/api-docs）。</td></tr><tr><td style="text-align:left;">springdoc.packages-to-scan</td><td style="text-align:left;"><code>*</code></td><td style="text-align:left;"><code>List of Strings</code>.要扫描的包列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.paths-to-match</td><td style="text-align:left;"><code>/*</code></td><td style="text-align:left;"><code>List of Strings</code>.要匹配的路径列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.produces-to-match</td><td style="text-align:left;"><code>/*</code></td><td style="text-align:left;"><code>List of Strings</code>.要匹配的生产媒体类型列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.headers-to-match</td><td style="text-align:left;"><code>/*</code></td><td style="text-align:left;"><code>List of Strings</code>.要匹配的标题列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.consumes-to-match</td><td style="text-align:left;"><code>/*</code></td><td style="text-align:left;"><code>List of Strings</code>.要匹配的消耗媒体类型列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.paths-to-exclude</td><td style="text-align:left;"></td><td style="text-align:left;"><code>List of Strings</code>.要排除的路径列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.packages-to-exclude</td><td style="text-align:left;"></td><td style="text-align:left;"><code>List of Strings</code>.要排除的包列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.default-consumes-media-type</td><td style="text-align:left;"><code>application/json</code></td><td style="text-align:left;"><code>String</code>. 默认使用媒体类型。</td></tr><tr><td style="text-align:left;">springdoc.default-produces-media-type</td><td style="text-align:left;"><code>**/**</code></td><td style="text-align:left;"><code>String</code>.默认产生媒体类型。</td></tr><tr><td style="text-align:left;">springdoc.cache.disabled</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 禁用计算出来的 OpenAPI 的 springdoc-openapi 缓存。</td></tr><tr><td style="text-align:left;">springdoc.show-actuator</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 显示执行器端点。</td></tr><tr><td style="text-align:left;">springdoc.auto-tag-classes</td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;"><code>Boolean</code>. 禁用 springdoc-openapi 自动标签。</td></tr><tr><td style="text-align:left;">springdoc.model-and-view-allowed</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 允许带有 ModelAndView 的 RestControllers 返回出现在 OpenAPI 描述中。</td></tr><tr><td style="text-align:left;">springdoc.override-with-generic-response</td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;"><code>Boolean</code>. 当为 true 时，自动将 @ControllerAdvice 响应添加到所有生成的响应中。</td></tr><tr><td style="text-align:left;">springdoc.api-docs.groups.enabled</td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;"><code>Boolean</code>. 禁用 springdoc-openapi 组。</td></tr><tr><td style="text-align:left;">springdoc.group-configs[0].group</td><td style="text-align:left;"></td><td style="text-align:left;"><code>String</code>.文档分组标识</td></tr><tr><td style="text-align:left;">springdoc.group-configs[0].display-name</td><td style="text-align:left;"></td><td style="text-align:left;"><code>String</code>.文档分组的显示名称.</td></tr><tr><td style="text-align:left;">springdoc.group-configs[0].packages-to-scan</td><td style="text-align:left;"><code>*</code></td><td style="text-align:left;"><code>List of Strings</code>.要扫描的包列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.group-configs[0].paths-to-match</td><td style="text-align:left;"><code>/*</code></td><td style="text-align:left;"><code>List of Strings</code>. 匹配组的路径列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.group-configs[0].paths-to-exclude</td><td style="text-align:left;"></td><td style="text-align:left;"><code>List of Strings</code>.要排除的路径列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.group-configs[0].packages-to-exclude</td><td style="text-align:left;"></td><td style="text-align:left;"><code>List of Strings</code>.要排除的包列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.group-configs[0].produces-to-match</td><td style="text-align:left;"><code>/*</code></td><td style="text-align:left;"><code>List of Strings</code>.要匹配的生产媒体类型列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.group-configs[0].consumes-to-match</td><td style="text-align:left;"><code>/*</code></td><td style="text-align:left;"><code>List of Strings</code>.要匹配的消耗媒体类型列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.group-configs[0].headers-to-match</td><td style="text-align:left;"><code>/*</code></td><td style="text-align:left;"><code>List of Strings</code>.要匹配的标题列表（逗号分隔）</td></tr><tr><td style="text-align:left;">springdoc.webjars.prefix</td><td style="text-align:left;"><code>/webjars</code></td><td style="text-align:left;"><code>String</code>, 要更改可见的 webjars 前缀，请更改 spring-webflux 的 swagger-ui 的 URL。</td></tr><tr><td style="text-align:left;">springdoc.api-docs.resolve-schema-properties</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 在@Schema 上启用属性解析器（名称、标题和描述）。</td></tr><tr><td style="text-align:left;">springdoc.remove-broken-reference-definitions</td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;"><code>Boolean</code>. 禁止删除损坏的参考定义。</td></tr><tr><td style="text-align:left;">springdoc.writer-with-default-pretty-printer</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 启用 OpenApi 规范的漂亮打印。</td></tr><tr><td style="text-align:left;">springdoc.model-converters.deprecating-converter.enabled</td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;"><code>Boolean</code>. 禁用弃用模型转换器。</td></tr><tr><td style="text-align:left;">springdoc.model-converters.polymorphic-converter.enabled</td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;"><code>Boolean</code>. 禁用多态模型转换器。</td></tr><tr><td style="text-align:left;">springdoc.model-converters.pageable-converter.enabled</td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;"><code>Boolean</code>. 禁用可分页模型转换器。</td></tr><tr><td style="text-align:left;">springdoc.use-fqn</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 启用完全限定名称。</td></tr><tr><td style="text-align:left;">springdoc.show-login-endpoint</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 使 spring 安全登录端点可见。</td></tr><tr><td style="text-align:left;">springdoc.pre-loading-enabled</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 在应用程序启动时加载 OpenAPI 的预加载设置。</td></tr><tr><td style="text-align:left;">springdoc.writer-with-order-by-keys</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 启用确定性/字母顺序。</td></tr><tr><td style="text-align:left;">springdoc.use-management-port</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 在执行器管理端口上公开 swagger-ui。</td></tr><tr><td style="text-align:left;">springdoc.disable-i18n</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"><code>Boolean</code>. 使用 i18n 禁用自动翻译。</td></tr><tr><td style="text-align:left;">springdoc.show-spring-cloud-functions</td><td style="text-align:left;"><code>true</code></td><td style="text-align:left;"><code>Boolean</code>. 是否显示 spring-cloud-function 的 web 端点.</td></tr></tbody></table><h3 id="swagger-ui-属性" tabindex="-1"><a class="header-anchor" href="#swagger-ui-属性" aria-hidden="true">#</a> swagger-ui 属性</h3>',3),it=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"参数名称"),t("th",{style:{"text-align":"left"}},"默认值"),t("th",{style:{"text-align":"left"}},"描述")])],-1),ct=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.path"),t("td",{style:{"text-align":"left"}},[t("code",null,"/swagger-ui.html")]),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(", 用于 swagger-ui HTML 文档的自定义路径。")])],-1),dt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.enabled"),t("td",{style:{"text-align":"left"}},[t("code",null,"true")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 禁用 swagger-ui 端点（默认为 /swagger-ui.html）。")])],-1),ut=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.configUrl"),t("td",{style:{"text-align":"left"}},[t("code",null,"/v3/api-docs/swagger-config")]),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 从中获取外部配置文档的 URL。")])],-1),rt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.layout"),t("td",{style:{"text-align":"left"}},[t("code",null,"BaseLayout")]),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 可通过插件系统用作 Swagger UI 的顶级布局的组件的名称。")])],-1),gt=t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.validatorUrl",-1),kt=t("td",{style:{"text-align":"left"}},[t("code",null,"null")],-1),yt={style:{"text-align":"left"}},ft={href:"https://github.com/swagger-api/validator-badge",target:"_blank",rel:"noopener noreferrer"},ht=t("code",null,"null",-1),mt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.tryItOutEnabled"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 控制是否应默认启用“试用”部分。")])],-1),vt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.filter"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean OR String"),n(". 如果设置，则启用过滤。顶部栏将显示一个编辑框，您可以使用它来过滤显示的标记操作。可以是布尔值以启用或禁用，也可以是字符串，在这种情况下，将使用该字符串作为过滤器表达式来启用过滤。过滤区分大小写，匹配标签内任何地方的过滤器表达式。")])],-1),xt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.operationsSorter"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"Function=(a ⇒ a)"),n(". 对每个 API 的操作列表应用排序。它可以是“alpha”（按字母数字的路径排序）、“method”（按 HTTP 方法排序）或函数（请参阅 Array.prototype.sort() 以了解排序函数的工作原理）。默认是服务器返回的顺序不变。")])],-1),bt=t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.tagsSorter",-1),_t=t("td",{style:{"text-align":"left"}},null,-1),wt={style:{"text-align":"left"}},St=t("code",null,"Function=(a ⇒ a)",-1),It={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort",target:"_blank",rel:"noopener noreferrer"},At=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.oauth2RedirectUrl"),t("td",{style:{"text-align":"left"}},[t("code",null,"/swagger-ui/oauth2-redirect.html")]),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". OAuth 重定向 URL。")])],-1),Ot=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.displayOperationId"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 控制操作列表中 operationId 的显示。默认为"),t("code",null,"false"),n("。")])],-1),Bt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.displayRequestDuration"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 控制“试用”请求的请求持续时间（以毫秒为单位）的显示。")])],-1),Pt=t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.deepLinking",-1),jt=t("td",{style:{"text-align":"left"}},[t("code",null,"false")],-1),Lt={style:{"text-align":"left"}},Ct=t("code",null,"Boolean",-1),Rt=t("code",null,"true",-1),qt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.defaultModelsExpandDepth"),t("td",{style:{"text-align":"left"}},[t("code",null,"1")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Number"),n(". 模型的默认扩展深度（设置为 -1 完全隐藏模型）。")])],-1),Ut=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.defaultModelExpandDepth"),t("td",{style:{"text-align":"left"}},[t("code",null,"1")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Number"),n(". 模型示例部分中模型的默认扩展深度。")])],-1),Tt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.defaultModelRendering"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,'String=["example"*, "model"]'),n(". 控制首次呈现 API 时模型的显示方式。（用户始终可以通过单击“模型”和“示例值”链接来切换给定模型的渲染。）")])],-1),Et=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.docExpansion"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,'String=["list"*, "full", "none"]'),n(". 控制操作和标签的默认扩展设置。它可以是“list”（仅展开标签）、“full”（展开标签和操作）或“none”（不展开任何内容）。")])],-1),Ht=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.maxDisplayedTags"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"Number"),n(". 如果设置，将显示的标记操作数量限制为最多这么多。默认是显示所有操作。")])],-1),Kt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.showExtensions"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 控制“"),t("code",null,"x-"),n("操作”、“参数”和“架构”的供应商扩展 ( ) 字段和值的显示。")])],-1),Ft=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.url"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(".要配置，自定义 OpenAPI 文件的路径。如果"),t("code",null,"urls"),n("使用将被忽略。")])],-1),Nt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.showCommonExtensions"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 控制参数的扩展（"),t("code",null,"pattern"),n("、"),t("code",null,"maxLength"),n("、"),t("code",null,"minLength"),n("、"),t("code",null,"maximum"),n("、"),t("code",null,"minimum"),n("）字段和值的显示。")])],-1),Dt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.supportedSubmitMethods"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,'Array=["get", "put", "post", "delete", "options", "head", "patch", "trace"]'),n(". 启用了“试用”功能的 HTTP 方法列表。空数组禁用所有操作的“试用”。这不会从显示中过滤操作。")])],-1),Mt=t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.queryConfigEnabled",-1),zt=t("td",{style:{"text-align":"left"}},[t("code",null,"false")],-1),Vt={style:{"text-align":"left"}},$t=t("code",null,"Boolean",-1),Gt=t("code",null,"v1.6.0",-1),Jt={href:"https://github.com/swagger-api/swagger-ui/security/advisories/GHSA-qrmm-w75w-3wpx",target:"_blank",rel:"noopener noreferrer"},Wt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.oauth. additionalQueryStringParams"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 添加到authorizationUrl 和tokenUrl 的附加查询参数。")])],-1),Xt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.disable-swagger-default-url"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 禁用 swagger-ui 默认 petstore url。（自 v1.4.1 起可用）。")])],-1),Yt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.urls[0].url"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"URL"),n(". swagger 组的 url，由 Topbar 插件使用。URL 在此数组中的所有项目中必须是唯一的，因为它们用作标识符。")])],-1),Qt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.urls[0].name"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". Topbar 插件使用的 swagger 组的名称。名称在此数组中的所有项目中必须是唯一的，因为它们用作标识符。")])],-1),Zt=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.urlsPrimaryName"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". Swagger UI 加载时将显示的 swagger 组的名称。")])],-1),tn=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.oauth.clientId"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 默认客户端 ID。必须是字符串。")])],-1),nn=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.oauth.clientSecret"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 默认客户端机密。切勿在您的生产环境中使用此参数。它暴露了关键的安全信息。此功能仅适用于开发/测试环境。")])],-1),sn=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.oauth.realm"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 领域查询参数（用于 OAuth 1）添加到 authorizationUrl 和 tokenUrl。")])],-1),an=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.oauth.appName"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". OAuth 应用程序名称，显示在授权弹出窗口中。")])],-1),en=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.oauth.scopeSeparator"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 用于传递范围的 OAuth 范围分隔符，在调用前编码，默认值为空格（编码值 %20）。")])],-1),ln=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.csrf.enabled"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 启用 CSRF 支持")])],-1),on=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.csrf.use-local-storage"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 从 Local Storage 获取 CSRF token。")])],-1),pn=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.csrf.use-session-storage"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 从 Session Storage 获取 CSRF token。")])],-1),cn=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.csrf.cookie-name"),t("td",{style:{"text-align":"left"}},[t("code",null,"XSRF-TOKEN")]),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 可选 CSRF，设置 CSRF cookie 名称。")])],-1),dn=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.csrf.header-name"),t("td",{style:{"text-align":"left"}},[t("code",null,"X-XSRF-TOKEN")]),t("td",{style:{"text-align":"left"}},[t("code",null,"String"),n(". 可选的 CSRF，设置 CSRF 头名称。")])],-1),un=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.syntaxHighlight.activated"),t("td",{style:{"text-align":"left"}},[t("code",null,"true")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 是否应激活语法突出显示。")])],-1),rn=t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.syntaxHighlight.theme",-1),gn=t("td",{style:{"text-align":"left"}},[t("code",null,"agate")],-1),kn={style:{"text-align":"left"}},yn=t("code",null,"String",-1),fn=t("code",null,'String=["agate"*, "arta", "monokai", "nord", "obsidian", "tomorrow-night"]',-1),hn={href:"https://highlightjs.org/static/demo/",target:"_blank",rel:"noopener noreferrer"},mn=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.oauth. useBasicAuthentication WithAccessCodeGrant"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 仅针对 accessCode 流激活。在对 tokenUrl 的 authorization_code 请求期间，使用 HTTP 基本身份验证方案（带有基本 base64encode(client_id + client_secret) 的授权标头）传递客户端密码。")])],-1),vn=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.oauth. usePkceWithAuthorization CodeGrant"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(".仅适用于授权码流。代码交换证明密钥为 OAuth 公共客户端带来了增强的安全性。")])],-1),xn=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.persistAuthorization"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 如果设置为 true，它会保留授权数据，并且不会在浏览器关闭/刷新时丢失")])],-1),bn=t("tr",null,[t("td",{style:{"text-align":"left"}},"springdoc.swagger-ui.use-root-path"),t("td",{style:{"text-align":"left"}},[t("code",null,"false")]),t("td",{style:{"text-align":"left"}},[t("code",null,"Boolean"),n(". 如果设置为 true，则可以直接从应用程序根路径访问 swagger-ui。")])],-1),_n=e(`<h2 id="文档聚合和分组" tabindex="-1"><a class="header-anchor" href="#文档聚合和分组" aria-hidden="true">#</a> 文档聚合和分组</h2><h3 id="文档聚合" tabindex="-1"><a class="header-anchor" href="#文档聚合" aria-hidden="true">#</a> 文档聚合</h3><p>当有多个服务提供时，在一个 ui 页面聚合查看所有服务的 API 文档。</p><p>这个 UI 页面所属的服务我们称为聚合者 Aggregator，其他的服务则成为文档提供者 Provider。</p><blockquote><p>注意，仅需在文档聚合者的服务中引入 UI 依赖，其他服务可以不引入</p></blockquote><p>由于聚合者和提供者的域名端口等信息可能不一致，则此时会出现跨域问题，所以提供者一般需要允许聚合者的源对其进行跨域访问。</p><h4 id="聚合示例" tabindex="-1"><a class="header-anchor" href="#聚合示例" aria-hidden="true">#</a> 聚合示例</h4><p>我们以 <strong>ballcat-admin</strong> 和 <strong>ballcat-api</strong> 两个服务为例：</p><ul><li><p><strong>ballcat-admin</strong> 的服务访问根路径为：http://ballcat-admin:8080</p></li><li><p><strong>ballcat-api</strong> 的服务访问根路径为：http://ballcat-api:9090</p></li></ul><p>当把 <strong>ballcat-admin</strong> 做为聚合者时，其配置文件中，需要添加 <strong>ballcat-api</strong> 的文档源地址：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">springdoc</span><span class="token punctuation">:</span>
  <span class="token key atrule">swagger-ui</span><span class="token punctuation">:</span>
    <span class="token key atrule">urls</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">&#39;/v3/api-docs&#39;</span> <span class="token punctuation">}</span> <span class="token comment">#其自身的文档地址，源信息可以省略</span>
      <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;api&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">&#39;http:///ballcat-api:9090/v3/api-docs&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而 <strong>ballcat-api</strong> 则处理跨域问题，允许 ballcat-admin 的跨域访问，在引入了 <code>ballcat-extend-openapi</code> 模块的情况下，可以通过添加如下配置，达到允许跨域的功能：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">ballcat</span><span class="token punctuation">:</span>
  <span class="token key atrule">openapi</span><span class="token punctuation">:</span>
    <span class="token key atrule">cors-config</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">allowed-origins</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token string">&quot;http://ballcat-admin:8080&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动两个服务后，访问 swagger-ui 页面，在 UI 的右上角，即可进行文档的切换显示：</p><p><img src="`+u+`" alt="openapi-aa"></p><h4 id="微服务下的聚合" tabindex="-1"><a class="header-anchor" href="#微服务下的聚合" aria-hidden="true">#</a> 微服务下的聚合</h4><p>通过自己配置 url-mapping：<code>/swagger-config.json</code>，替换 springdoc 默认提供的 swagger-config:</p><p>然后通过服务发现机制，获取到所有的服务示例，将其对应的文档源地址注册并返回出去：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerUiConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">DiscoveryClient</span> discoveryClient<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/swagger-config.json&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">swaggerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SwaggerUrl</span><span class="token punctuation">&gt;</span></span> urls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        discoveryClient<span class="token punctuation">.</span><span class="token function">getServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>serviceName <span class="token operator">-&gt;</span> 
                        discoveryClient<span class="token punctuation">.</span><span class="token function">getInstances</span><span class="token punctuation">(</span>serviceName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>serviceInstance <span class="token operator">-&gt;</span>
                                urls<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SwaggerUrl</span><span class="token punctuation">(</span>serviceName<span class="token punctuation">,</span> serviceInstance<span class="token punctuation">.</span><span class="token function">getUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/v3/api-docs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;urls&quot;</span><span class="token punctuation">,</span> urls<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> config<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),wn={href:"https://github.com/springdoc/springdoc-openapi/issues/108",target:"_blank",rel:"noopener noreferrer"},Sn=e(`<h3 id="文档分组" tabindex="-1"><a class="header-anchor" href="#文档分组" aria-hidden="true">#</a> 文档分组</h3><p>不同于文档聚合，文档分组是在一个服务内部，根据一定的规则，将自身提供的 API 进行分组管理</p><p>以 <strong>ballcat-admin</strong> 为例，我们可以根据包名，将其文档拆分成 <code>sample</code> 和 <code>ballcat</code> 两个分组</p><blockquote><p>刚才的 springdoc.swagger-ui.urls 属性就不需要配置了</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">springdoc</span><span class="token punctuation">:</span>
  <span class="token key atrule">group-configs</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token punctuation">{</span><span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">&#39;sample&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">packages-to-scan</span><span class="token punctuation">:</span> <span class="token string">&#39;com.your&#39;</span><span class="token punctuation">}</span>
    <span class="token punctuation">-</span> <span class="token punctuation">{</span><span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">&#39;ballcat&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">packages-to-scan</span><span class="token punctuation">:</span> <span class="token string">&#39;com.hccake.ballcat&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+`" alt="openapi-group"></p><p>除了根据包名外，还可以根据 path 等其他信息，具体参看刚才的属性配置一节，这里不再过多演示。</p><h3 id="搭配使用聚合和分组" tabindex="-1"><a class="header-anchor" href="#搭配使用聚合和分组" aria-hidden="true">#</a> 搭配使用聚合和分组</h3><p>我们将 <strong>ballcat-admin</strong> 拆分成两个分组 <code>sample</code> 和 <code>ballcat</code></p><p>将 <strong>ballcat-api</strong> 也拆分成两个分组 <code>api-user</code> 和 <code>api-test</code></p><p>则 <strong>ballcat-api</strong> 的配置文件如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">ballcat</span><span class="token punctuation">:</span>
  <span class="token key atrule">openapi</span><span class="token punctuation">:</span>
    <span class="token key atrule">cors-config</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 跨域支持</span>
      <span class="token key atrule">allowed-origins</span><span class="token punctuation">:</span> 
        <span class="token punctuation">-</span> <span class="token string">&quot;http://ballcat-admin:8080&quot;</span>

<span class="token key atrule">springdoc</span><span class="token punctuation">:</span>
  <span class="token key atrule">group-configs</span><span class="token punctuation">:</span> <span class="token comment"># 这里根据 path，请求路径进行分组</span>
    <span class="token punctuation">-</span> <span class="token punctuation">{</span><span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">&#39;api-user&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">paths-to-match</span><span class="token punctuation">:</span> <span class="token string">&#39;/user/**&#39;</span><span class="token punctuation">}</span>
    <span class="token punctuation">-</span> <span class="token punctuation">{</span><span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">&#39;api-test&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">paths-to-match</span><span class="token punctuation">:</span> <span class="token string">&#39;/public/**&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>f分组的文档地址规则为：<code>http://server:port/context-path/v3/api-docs/groupName</code></p><p>所以 <code>api-user</code> 分组的文档源地址将会变为：<code>http://ballcat-api:9090/v3/api-docs/api-user</code></p><p>而 <strong>ballcat-admin</strong> 的配置文件如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">springdoc</span><span class="token punctuation">:</span>
  <span class="token key atrule">group-configs</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token punctuation">{</span><span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">&#39;sample&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">packages-to-scan</span><span class="token punctuation">:</span> <span class="token string">&#39;com.your&#39;</span><span class="token punctuation">}</span>
    <span class="token punctuation">-</span> <span class="token punctuation">{</span><span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">&#39;ballcat&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">packages-to-scan</span><span class="token punctuation">:</span> <span class="token string">&#39;com.hccake.ballcat&#39;</span><span class="token punctuation">}</span>
  <span class="token key atrule">swagger-ui</span><span class="token punctuation">:</span>
    <span class="token key atrule">urls</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;api-user&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">&#39;http://ballcat-api:9090/v3/api-docs/api-user&#39;</span> <span class="token punctuation">}</span>
      <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;api-test&#39;</span><span class="token punctuation">,</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">&#39;http://ballcat-api:9090/v3/api-docs/api-test&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：当聚合者自身进行分组时，urls 属性中，不必在配置其自身文档源地址</p></blockquote><p><img src="`+g+'" alt="openapi-aggregator-group"></p><h2 id="安全方案" tabindex="-1"><a class="header-anchor" href="#安全方案" aria-hidden="true">#</a> 安全方案</h2><h3 id="安全方案类型" tabindex="-1"><a class="header-anchor" href="#安全方案类型" aria-hidden="true">#</a> 安全方案类型</h3><p>OpenAPI 规范中支持的安全方案是</p>',21),In=t("li",null,"HTTP 身份验证",-1),An=t("li",null,"API key （作为 Header 或 查询参数）",-1),On={href:"https://tools.ietf.org/html/rfc6749",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://tools.ietf.org/html/draft-ietf-oauth-discovery-06",target:"_blank",rel:"noopener noreferrer"},Pn=t("p",null,[n("在 java 中的抽象类型对应 "),t("code",null,"io.swagger.v3.oas.models.security.SecurityScheme"),n("：")],-1),jn=t("p",null,"这里摘录官方文档中的部分介绍：",-1),Ln=t("thead",null,[t("tr",null,[t("th",null,"字段名称"),t("th",null,"类型"),t("th",null,"适用于"),t("th",null,"描述")])],-1),Cn=t("tr",null,[t("td",null,"type"),t("td",null,[t("code",null,"string")]),t("td",null,"Any"),t("td",null,[t("strong",null,"必须的"),n(". 安全方案的类型。有效值为 "),t("code",null,'"apiKey"'),n(", "),t("code",null,'"http"'),n(", "),t("code",null,'"oauth2"'),n(", "),t("code",null,'"openIdConnect"'),n(".")])],-1),Rn=t("tr",null,[t("td",null,"description"),t("td",null,[t("code",null,"string")]),t("td",null,"Any"),t("td",null,"安全方案的简短描述。")],-1),qn=t("tr",null,[t("td",null,"name"),t("td",null,[t("code",null,"string")]),t("td",null,[t("code",null,"apiKey")]),t("td",null,[t("strong",null,"必须的"),n(". API key 在 header, query or cookie 的参数名称")])],-1),Un=t("tr",null,[t("td",null,"in"),t("td",null,[t("code",null,"string")]),t("td",null,[t("code",null,"apiKey")]),t("td",null,[t("strong",null,"必须的"),n(". API key 在请求中的位置. 有效值为"),t("code",null,'"query"'),n(","),t("code",null,'"header"'),n("或"),t("code",null,'"cookie"'),n("。")])],-1),Tn=t("td",null,"scheme",-1),En=t("td",null,[t("code",null,"string")],-1),Hn=t("td",null,[t("code",null,"http")],-1),Kn=t("strong",null,"必须的",-1),Fn={href:"https://tools.ietf.org/html/rfc7235#section-5.1",target:"_blank",rel:"noopener noreferrer"},Nn={href:"https://tools.ietf.org/html/rfc7235#section-5.1",target:"_blank",rel:"noopener noreferrer"},Dn=t("tr",null,[t("td",null,"bearerFormat"),t("td",null,[t("code",null,"string")]),t("td",null,[t("code",null,"http"),n(" ("),t("code",null,'"bearer"'),n(")")]),t("td",null,"提示客户端识别不记名令牌的格式。不记名令牌通常由授权服务器生成，因此此信息主要用于文档目的。")],-1),Mn=t("td",null,"flows",-1),zn={href:"https://github.com/OAI/OpenAPI-Specification/blob/3.0.1/versions/3.0.1.md#oauthFlowsObject",target:"_blank",rel:"noopener noreferrer"},Vn=t("td",null,[t("code",null,"oauth2")],-1),$n=t("td",null,[t("strong",null,"必须的"),n(". 一个 包含了支持的 OAuth2 流类型的配置信息的对象")],-1),Gn=t("tr",null,[t("td",null,"openIdConnectUrl"),t("td",null,[t("code",null,"string")]),t("td",null,[t("code",null,"openIdConnect")]),t("td",null,[t("strong",null,"必须的"),n(". 提供 OAuth2 配置的 OpenId Connect URL.")])],-1),Jn=t("p",null,"更多信息参看：https://github.com/OAI/OpenAPI-Specification/blob/3.0.1/versions/3.0.1.md#security-scheme-object",-1),Wn=t("h3",{id:"配置-apikey-安全方案",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#配置-apikey-安全方案","aria-hidden":"true"},"#"),n(" 配置 ApiKey 安全方案")],-1),Xn=t("p",null,"springdoc 默认是通过注册 OpenApi 类型的 bean，并在其中设置相关的安全方案配置。",-1),Yn={href:"https://github.com/springdoc/springdoc-openapi-demos",target:"_blank",rel:"noopener noreferrer"},Qn=e(`<p>在引入了 <code>ballcat-extend-openapi</code> 依赖时，可以通过 yaml 配置的方式进行定义：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">ballcat</span><span class="token punctuation">:</span>
  <span class="token key atrule">openapi</span><span class="token punctuation">:</span>
  	<span class="token key atrule">info</span><span class="token punctuation">:</span>
      <span class="token key atrule">title</span><span class="token punctuation">:</span> BallCat<span class="token punctuation">-</span>Admin Docs
      <span class="token key atrule">version</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>project.version<span class="token punctuation">}</span>
    <span class="token key atrule">components</span><span class="token punctuation">:</span>
      <span class="token key atrule">security-schemes</span><span class="token punctuation">:</span>
        <span class="token key atrule">apiKey</span><span class="token punctuation">:</span>
          <span class="token key atrule">type</span><span class="token punctuation">:</span> APIKEY
          <span class="token key atrule">in</span><span class="token punctuation">:</span> HEADER  <span class="token comment"># 表示在请求头中携带参数</span>
          <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;api-key&#39;</span> <span class="token comment"># 表示请求头的名称为 api-key</span>
        <span class="token key atrule">oauth2</span><span class="token punctuation">:</span>
          <span class="token key atrule">type</span><span class="token punctuation">:</span> OAUTH2 
          <span class="token key atrule">flows</span><span class="token punctuation">:</span>
            <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token comment"># OAuth2 密码模式</span>
              <span class="token key atrule">token-url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//ballcat<span class="token punctuation">-</span>admin<span class="token punctuation">:</span>8080/oauth/token
    <span class="token comment"># 全局接口都默认使用 oauth2 和 apiKey 两种鉴权方式</span>
    <span class="token key atrule">security</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">oauth2</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token punctuation">-</span> <span class="token key atrule">apiKey</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动后会发现，多了一个授权按钮：</p><p><img src="`+k+'" alt="openapi-authorize"></p><p>点击按钮后，可以在弹窗中输入一个已被授权的 ApiKey，这里我们填入 <code>wo-de-api-key</code></p><p><img src="'+y+'" alt="openapi-apikey"></p><p>然后单击 Authorize 按钮，即可授权成功</p><p><img src="'+f+'" alt="openapi-apikey"></p><p>之后，我们随便找一个接口进行 <strong>Try it out</strong> 调试，点击 execete 后，返现 swagger-ui 在向后台接口发起访问时，会自动将我们填写的 ApiKey 附着在请求头上</p><p><img src="'+h+`" alt="openapi-apikey-header"></p><h3 id="接口独立配置安全方案" tabindex="-1"><a class="header-anchor" href="#接口独立配置安全方案" aria-hidden="true">#</a> 接口独立配置安全方案</h3><p>可以在接口上添加 <code>@SecurityRequirement</code> 注解， 以表示当前接口走指定的安全方案，从而覆盖全局的安全方案配置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SecurityRequirement</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;ballcat-oauth&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以上注解被添加到接口上后表示，该接口使用一个 name 为 <code>ballcat-oauth</code> 的安全方案</p><h3 id="接口忽略安全方案" tabindex="-1"><a class="header-anchor" href="#接口忽略安全方案" aria-hidden="true">#</a> 接口忽略安全方案</h3><p>如果有接口时对外抛出，无需鉴权处理的，可以通过添加一个空的 <code>@SecurityRequirements</code> 注解，标识其无需鉴权</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SecurityRequirements</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17);function Zn(ts,ns){const l=o("RouterLink"),a=o("ExternalLinkIcon");return c(),d("div",null,[v,t("p",null,[n("升级 Swagger2 到 OpenApi3，可以参看此 "),s(l,{to:"/guide/other/swagger2ToOpenApi3.html"},{default:p(()=>[n("文档")]),_:1})]),x,t("ul",null,[t("li",null,[n("文档将以 HTML 格式提供，使用官方 "),t("a",b,[n("swagger-ui jars"),s(a)])]),_,w]),S,t("blockquote",null,[t("p",null,[n("javadoc 支持基于 "),t("a",I,[n("therapi-runtime-javadoc"),s(a)]),n("，所以需要开启了对应的注解处理器，否则不会生效")])]),A,t("table",null,[O,t("tbody",null,[B,P,j,L,C,R,q,U,T,E,H,K,t("tr",null,[F,N,t("td",D,[M,n(". 安全配置的map，key 为 String 类型，value 为 SecurityScheme 类型，其属性太多，这里不展开了，具体可参看 open api 官方文档 "),t("a",z,[n("securitySchemeObject"),s(a)])])]),t("tr",null,[V,$,t("td",G,[J,n(". 全局默认的安全配置，key 对应刚才配置的 SecurityScheme , value 为 list 类型，用来存放安全配置需要的 scope，除了 "),W,n(" 和 "),X,n(" 类型的安全配置，其余都是空数组，参看"),t("a",Y,[n("官方文档"),s(a)])])]),Q,Z,tt,nt,st,at,et,lt,ot])]),pt,t("table",null,[it,t("tbody",null,[ct,dt,ut,rt,t("tr",null,[gt,kt,t("td",yt,[n("默认情况下，Swagger UI 尝试根据 swagger.io 的在线验证器验证规范。您可以使用此参数来设置不同的验证器 URL，例如为本地部署的验证器"),t("a",ft,[n("Validator Badge"),s(a)]),n("。将其设置为"),ht,n("将禁用验证。")])]),mt,vt,xt,t("tr",null,[bt,_t,t("td",wt,[St,n(". 对每个 API 的标签列表应用排序。它可以是“alpha”（按字母数字路径排序）或函数，"),t("a",It,[n("请参阅 Array.prototype.sort()"),s(a)]),n("以了解如何编写排序函数）。每次通过时，将两个标签名称字符串传递给分拣机。默认是 Swagger UI 确定的顺序。")])]),At,Ot,Bt,t("tr",null,[Pt,jt,t("td",Lt,[Ct,n(". 如果设置为"),Rt,n("，则启用标签和操作的深层链接。有关详细信息，请参阅 "),s(l,{to:"/docs/usage/deep-linking.html"},{default:p(()=>[n("深层链接文档")]),_:1}),n("。")])]),qt,Ut,Tt,Et,Ht,Kt,Ft,Nt,Dt,t("tr",null,[Mt,zt,t("td",Vt,[$t,n(". 自禁用"),Gt,n("。此参数通过 URL 搜索参数启用（旧版）覆盖配置参数。在启用此功能之前，"),t("a",Jt,[n("请参阅安全公告"),s(a)]),n("。")])]),Wt,Xt,Yt,Qt,Zt,tn,nn,sn,an,en,ln,on,pn,cn,dn,un,t("tr",null,[rn,gn,t("td",kn,[yn,n(". "),fn,n(". 要使用的"),t("a",hn,[n("Highlight.js"),s(a)]),n("语法着色主题。（仅提供这 6 种样式。）")])]),mn,vn,xn,bn])]),_n,t("p",null,[n("更多详情，可参看官方 issue: "),t("a",wn,[n("Centralized API Documentation"),s(a)])]),Sn,t("ul",null,[In,An,t("li",null,[n("OAuth2 的通用流程（implicit, password, application and access code），如"),t("a",On,[n("RFC6749"),s(a)])]),t("li",null,[t("a",Bn,[n("OpenID Connect Discovery"),s(a)])])]),Pn,jn,t("table",null,[Ln,t("tbody",null,[Cn,Rn,qn,Un,t("tr",null,[Tn,En,Hn,t("td",null,[Kn,n(". 要"),t("a",Fn,[n("在 RFC7235 中定义"),s(a)]),n("的"),t("a",Nn,[n("Authorization 标头中"),s(a)]),n("使用的 HTTP 授权方案的名称。")])]),Dn,t("tr",null,[Mn,t("td",null,[t("a",zn,[n("OAuth Flows Object"),s(a)])]),Vn,$n]),Gn])]),Jn,Wn,Xn,t("p",null,[n("具体可以参看其示例："),t("a",Yn,[n("springdoc-openapi-demos"),s(a)])]),Qn])}const as=i(m,[["render",Zn],["__file","openapi.html.vue"]]);export{as as default};
