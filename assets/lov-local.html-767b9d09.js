import{_ as e,r as l,o as p,c as o,a as t,b as n,d as r,e as a}from"./app-01a0a318.js";const i={},d=a(`<h1 id="lov-local" tabindex="-1"><a class="header-anchor" href="#lov-local" aria-hidden="true">#</a> Lov Local</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>Lov 的全称是 List of value，值列表，又称弹窗选择器。</p><p>前端常见的选择组件 select，难以根据多条件进行检索，数据展示维度也比较单一，而且在选择项过多时，易产生卡顿。</p><p>Lov 组件相比较于下拉列表，可以很方便的定义多个查询条件，以及展示列，同时由于是分页查询，也不会受到数据量过多时的效率影响。</p><p>当然 Lov 也不是处处都好，在选择项较少，检索条件单一的时候，使用 select 组件，可以减少用户的一次交互，提示用户体验。</p><blockquote><p>原 lov 组件在服务端进行属性配置，增加了交互开销，以及前端的定制会比较繁琐。</p></blockquote><blockquote><p>故新增了 lov-local 的纯前端组件，之前的 lov 组件将在后续版本移除</p></blockquote><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例" aria-hidden="true">#</a> 使用示例</h2><h3 id="定义你的-lov-local-相关-options" tabindex="-1"><a class="header-anchor" href="#定义你的-lov-local-相关-options" aria-hidden="true">#</a> 定义你的 Lov-Local 相关 Options</h3><p>在一个 <code>lovOptions.js</code> 文件中，定义项目中所有需要的 LOV 的 Options。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Lov 搜索条件控件的类型</span>
<span class="token keyword">const</span> <span class="token constant">SEARCH_TYPE</span><span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;input&quot;</span><span class="token operator">:</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;number-input&quot;</span><span class="token operator">:</span><span class="token string">&quot;number-input&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;select&quot;</span><span class="token operator">:</span><span class="token string">&quot;select&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;dict-select&quot;</span><span class="token operator">:</span><span class="token string">&quot;dict-select&quot;</span>
<span class="token punctuation">}</span>


<span class="token keyword">import</span> <span class="token punctuation">{</span> getPage <span class="token keyword">as</span> getUserPage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/system/user&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> sysUserLov <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">multiple</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isNumberValue</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">modalTitle</span><span class="token operator">:</span> <span class="token string">&#39;用户&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataKey</span><span class="token operator">:</span> <span class="token string">&#39;userId&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// 自定义选择项的展示标题</span>
    <span class="token function">customOptionTitle</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> record<span class="token punctuation">.</span>nickname
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">getPageData</span><span class="token operator">:</span> getUserPage<span class="token punctuation">,</span>
    <span class="token comment">// 搜索配置</span>
    <span class="token literal-property property">searchOptions</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;用户名&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token constant">SEARCH_TYPE</span><span class="token punctuation">.</span>input<span class="token punctuation">,</span>
            <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">&#39;message.pleaseEnter&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;昵称&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token constant">SEARCH_TYPE</span><span class="token punctuation">.</span>input<span class="token punctuation">,</span>
            <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">&#39;message.pleaseEnter&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 表格列</span>
    <span class="token literal-property property">tableColumns</span><span class="token operator">:</span>
        <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;用户名&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;username&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;昵称&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;nickname&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;组织&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;organizationName&#39;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在使用页面中引入-lov-options" tabindex="-1"><a class="header-anchor" href="#在使用页面中引入-lov-options" aria-hidden="true">#</a> 在使用页面中引入 Lov Options</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> sysUserLov <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/Lov/lovOptions&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="放入-vue-组件的-data-中" tabindex="-1"><a class="header-anchor" href="#放入-vue-组件的-data-中" aria-hidden="true">#</a> 放入 vue 组件的 data 中</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            sysUserLov
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在模板中使用-lov" tabindex="-1"><a class="header-anchor" href="#在模板中使用-lov" aria-hidden="true">#</a> 在模板中使用 Lov</h3><p>使用 v-model 进行双向绑定：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token operator">&lt;</span>lov<span class="token operator">-</span>local v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;queryParam.userId&quot;</span> v<span class="token operator">-</span>bind<span class="token operator">=</span><span class="token string">&quot;sysUserLov&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也支持 <code>ant-design-vue</code> 默认的表单绑定形式：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>用户<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lov-local</span> <span class="token attr-name">v-decorator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;userId&#39;, decoratorOptions.userId]<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sysUserLov<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-form-item</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以给 lov 配置 disabled 属性，变为一个只读控件</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lov-local</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userId<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sysUserLov<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明" aria-hidden="true">#</a> 参数说明</h2><table><thead><tr><th>参数</th><th style="text-align:left;">说明</th><th style="text-align:center;">类型</th><th>是否必传</th><th>默认值</th></tr></thead><tbody><tr><td>isNumberValue</td><td style="text-align:left;">lov 值是否是 Number 类型（由于 antd 限制，Number 类型需要特殊处理下）</td><td style="text-align:center;">Boolean</td><td>否</td><td>false</td></tr><tr><td>multiple</td><td style="text-align:left;">lov 是否多选</td><td style="text-align:center;">Boolean</td><td>否</td><td>false</td></tr><tr><td>disabled</td><td style="text-align:left;">lov 是否禁用</td><td style="text-align:center;">Boolean</td><td>否</td><td>false</td></tr><tr><td>placeholder</td><td style="text-align:left;">lov 未选中时的提示占位符</td><td style="text-align:center;">String</td><td>否</td><td>&#39;&#39;</td></tr><tr><td>dataKey</td><td style="text-align:left;">lov 选中数据后的 value 对应属性名（该属性必须唯一）</td><td style="text-align:center;">String</td><td>是</td><td>-</td></tr><tr><td>customOptionTitle</td><td style="text-align:left;">自定义选择项的展示标题，默认直接展示 value 属性</td><td style="text-align:center;">Function</td><td>否</td><td>-</td></tr><tr><td>modalTitle</td><td style="text-align:left;">lov 弹出框的标题</td><td style="text-align:center;">String</td><td>否</td><td>&#39;&#39;</td></tr><tr><td>modalWidth</td><td style="text-align:left;">lov 弹出框的宽度</td><td style="text-align:center;">String</td><td>否</td><td>&#39;600px&#39;</td></tr><tr><td>searchOptions</td><td style="text-align:left;">lov 弹出框的搜索区域配置</td><td style="text-align:center;">Array[SearchOption]</td><td>否</td><td>[]</td></tr><tr><td>getPageData</td><td style="text-align:left;">lov 表格数据加载方法，返回 promise</td><td style="text-align:center;">Function</td><td>是</td><td>-</td></tr><tr><td>tableColumns</td><td style="text-align:left;">lov 表格的列展示选项，对应 a-table 的 column 属性</td><td style="text-align:center;">Array[Column]</td><td>是</td><td>-</td></tr><tr><td>tableSize</td><td style="text-align:left;">String，值为 a-table 支持的 size 类型</td><td style="text-align:center;">String</td><td>否</td><td>&#39;middle&#39;</td></tr></tbody></table><h3 id="searchoption" tabindex="-1"><a class="header-anchor" href="#searchoption" aria-hidden="true">#</a> SearchOption</h3><table><thead><tr><th>参数</th><th style="text-align:left;">说明</th><th style="text-align:center;">类型</th><th>是否必传</th><th>默认值</th></tr></thead><tbody><tr><td>label</td><td style="text-align:left;">lov中搜索框的 label （建议填写）</td><td style="text-align:center;">String</td><td>否</td><td>-</td></tr><tr><td>field</td><td style="text-align:left;">lov中搜索框的 value 对应的 name</td><td style="text-align:center;">String</td><td>是</td><td>-</td></tr><tr><td>type</td><td style="text-align:left;">lov中搜索框的标签类型</td><td style="text-align:center;">String</td><td>是</td><td>-</td></tr><tr><td>placeholder</td><td style="text-align:left;">lov中搜索框的 placeholder</td><td style="text-align:center;">String</td><td>否</td><td>-</td></tr><tr><td>options</td><td style="text-align:left;">lov中搜索框的类型为 selcect 时候使用（参考ant-design select 中options 用法）</td><td style="text-align:center;">Array</td><td>否</td><td>-</td></tr><tr><td>dictCode</td><td style="text-align:left;">lov中搜索框的类型为字典时候</td><td style="text-align:center;">String</td><td>否</td><td>-</td></tr><tr><td>min</td><td style="text-align:left;">lov中搜索框的类型是数字, 最小值</td><td style="text-align:center;">Number</td><td>否</td><td>0</td></tr><tr><td>max</td><td style="text-align:left;">lov中搜索框的类型是数字，最大值</td><td style="text-align:center;">Number</td><td>否</td><td>-</td></tr></tbody></table><h3 id="column" tabindex="-1"><a class="header-anchor" href="#column" aria-hidden="true">#</a> Column</h3>`,28),c={href:"https://antdv.com/components/table-cn/",target:"_blank",rel:"noopener noreferrer"},u=a('<h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><table><thead><tr><th>事件名称</th><th style="text-align:left;">说明</th><th style="text-align:center;">回调参数</th></tr></thead><tbody><tr><td>change</td><td style="text-align:left;">当选中值变更时触发，回调入参多选时为数组</td><td style="text-align:center;">selectedValue || selectedValues</td></tr><tr><td>input</td><td style="text-align:left;">同 change 事件</td><td style="text-align:center;">selectedValue || selectedValues</td></tr><tr><td>rowChange</td><td style="text-align:left;">也是值变更时触发，不同的是，回调入参为数据对象或数据对象数组</td><td style="text-align:center;">selectedRow || selectedRows</td></tr></tbody></table>',2);function v(k,m){const s=l("ExternalLinkIcon");return p(),o("div",null,[d,t("p",null,[n("使用方法参考 antd-vue 表格中的 columns 用法："),t("a",c,[n("antd-vue-table"),r(s)])]),u])}const y=e(i,[["render",v],["__file","lov-local.html.vue"]]);export{y as default};
