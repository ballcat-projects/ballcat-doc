import{_ as o,r as e,o as c,c as u,a as n,b as s,d as t,e as p}from"./app-1d00ec13.js";const l={},i=n("h1",{id:"ant-desgin-pro-v5-动态路由",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ant-desgin-pro-v5-动态路由","aria-hidden":"true"},"#"),s(" Ant Desgin Pro V5 动态路由")],-1),r=n("blockquote",null,[n("p",null,"主要步骤如下")],-1),k=n("h3",{id:"_1-使用自定义layout",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-使用自定义layout","aria-hidden":"true"},"#"),s(" 1. 使用自定义Layout")],-1),d={href:"https://github.com/ballcat-projects/ballcat-ui-react/blob/main/src/layouts/BasicLayout.tsx",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"主要是用来重写路由的. 主要代码如下",-1),m=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>

<span class="token keyword">const</span> BasicLayout<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>BasicLayoutProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
    children<span class="token punctuation">,</span>
    location <span class="token operator">=</span> <span class="token punctuation">{</span>
      pathname<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    route<span class="token punctuation">,</span>
  <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
    <span class="token comment">// 自定义 model 从服务端加载数据</span>
    <span class="token comment">// 可以使用其他方式实现, 效果一样就可以了</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> routeArray<span class="token punctuation">,</span> firstPath<span class="token punctuation">,</span> load<span class="token punctuation">,</span> setLoad <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useModel</span><span class="token punctuation">(</span><span class="token string">&#39;dynamic-route&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 加载动态的路由数据</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 已加载路由则不在重载</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>load<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> newRoute<span class="token operator">:</span> ExpandRoute <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>route <span class="token punctuation">}</span><span class="token punctuation">;</span>
    newRoute<span class="token punctuation">.</span>routes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    newRoute<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

      <span class="token comment">// 路由处理</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>routeArray <span class="token operator">&amp;&amp;</span> routeArray<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> routeArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> menu <span class="token operator">=</span> routeArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        newRoute<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newRoute<span class="token punctuation">.</span>routes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      route<span class="token punctuation">.</span>routes <span class="token operator">=</span> newRoute<span class="token punctuation">.</span>routes<span class="token punctuation">;</span>
      route<span class="token punctuation">.</span>children <span class="token operator">=</span> newRoute<span class="token punctuation">.</span>routes<span class="token punctuation">;</span>
      <span class="token function">setLoad</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 初次加载页面非根页面处理</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>location<span class="token punctuation">.</span>pathname <span class="token operator">&amp;&amp;</span> location<span class="token punctuation">.</span>pathname <span class="token operator">!==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        history<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>routeArray<span class="token punctuation">,</span> load<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 首页处理</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>location<span class="token punctuation">.</span>pathname <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">&amp;&amp;</span> firstPath <span class="token operator">&amp;&amp;</span> firstPath <span class="token operator">!==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>firstPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>ProLayout
	<span class="token operator">...</span>
      <span class="token comment">// 写入动态路由</span>
      route<span class="token operator">=</span><span class="token punctuation">{</span>route<span class="token punctuation">}</span>
     <span class="token operator">...</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ProLayout<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> BasicLayout<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-从服务端加载数据" tabindex="-1"><a class="header-anchor" href="#_2-从服务端加载数据" aria-hidden="true">#</a> 2. 从服务端加载数据</h3>`,2),b={href:"https://github.com/ballcat-projects/ballcat-ui-react/blob/main/src/models/dynamic-route.ts",target:"_blank",rel:"noopener noreferrer"},y=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useCallback<span class="token punctuation">,</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useModel<span class="token punctuation">,</span> dynamic <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;umi&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> ExpandRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/RouteUtils&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/RouteUtils&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> LoadingComponent <span class="token keyword">from</span> <span class="token string">&#39;@ant-design/pro-layout/es/PageLoading&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> I18n <span class="token keyword">from</span> <span class="token string">&#39;@/utils/I18nUtils&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> getFirstUrl <span class="token operator">=</span> <span class="token punctuation">(</span>menuArray<span class="token operator">:</span> ExpandRoute<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> menuArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> menu <span class="token operator">=</span> menuArray<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// 菜单未隐藏</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>menu<span class="token punctuation">.</span>hideInMenu<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 如果存在子级 且子级的第一个菜单存在路径</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>menu<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> menu<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> menu<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token function">getFirstUrl</span><span class="token punctuation">(</span>menu<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 存在首页</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> url<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 不存在, 且当前菜单是页面</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>menu<span class="token punctuation">.</span>exact<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> menu<span class="token punctuation">.</span>path<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> initialState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useModel</span><span class="token punctuation">(</span><span class="token string">&#39;@@initialState&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>routeArray<span class="token punctuation">,</span> setMenuArray<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>ExpandRoute<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>firstPath<span class="token punctuation">,</span> setMenuFirst<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>load<span class="token punctuation">,</span> setLoad<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 刷新路由</span>
  <span class="token keyword">const</span> refresh <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resMenuArray<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> newMenuArray<span class="token operator">:</span> ExpandRoute<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        newMenuArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>resMenuArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 路由末尾插入 404 页面, 用来处理未知路由的渲染</span>
        newMenuArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          component<span class="token operator">:</span> <span class="token function">dynamic</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token function-variable function">loader</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/pages/exception/404&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            loading<span class="token operator">:</span> LoadingComponent<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setMenuArray</span><span class="token punctuation">(</span>newMenuArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setMenuFirst</span><span class="token punctuation">(</span><span class="token function">getFirstUrl</span><span class="token punctuation">(</span>newMenuArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setLoad</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        I18n<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;menu.load.failed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 刷新路由</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 在更新有效用户时触发</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialState<span class="token operator">?.</span>user<span class="token operator">?.</span>access_token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>initialState<span class="token punctuation">,</span> refresh<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> routeArray<span class="token punctuation">,</span> firstPath<span class="token punctuation">,</span> refresh<span class="token punctuation">,</span> load<span class="token punctuation">,</span> setLoad <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function f(h,g){const a=e("ExternalLinkIcon");return c(),u("div",null,[i,r,k,n("blockquote",null,[n("p",null,[n("a",d,[s("参考示例"),t(a)])]),v]),m,n("blockquote",null,[n("p",null,[s("实现方式很多, "),n("a",b,[s("示例使用 model 实现"),t(a)])])]),y])}const _=o(l,[["render",f],["__file","react-antd-pro-v5-dynamic-route.html.vue"]]);export{_ as default};
